type Libro {
    titulo: String
    isbn: String
    autor: String
    idioma: String
    editorial: String
    formato: String
    fecha_publicacion: String
    genero: String
    edicion: String
    nro_paginas: Int
    stock: Int
}

type Juguete {
    nombre: String
    tema: String
    material_principal: String
    fuente_energia: String
    modo_juego: String
    publico_objetivo: String
    stock: Int
}

type Item_Juguete {
    uuid: String
    nombre: String
    estado: String
    sede: String
    precio_compra: Float
    valor: Float
    fecha_adquisicion: String
    fecha_caducidad: String
}

type Item_Libro {
    uuid: String
    titulo: String
    estado: String
    sede: String
    precio_compra: Float
    valor: Float
    fecha_adquisicion: String
    fecha_caducidad: String
}

type Item {
    # uuid: String
    nombre: String
    estado: String
    sede: String
    precio_compra: Float
    valor: Float
    fecha_adquisicion: String
    fecha_caducidad: String
}

input FilterAND {
    and: [FilterOR!]
}

input FilterOR {
    or: [Filter!]
}

input Filter {
    field: String!
    eq: String
    contains: String
    gte: String
    gt: String
    lt: String
    lte: String
}

type Query {
    test: String
    libros: [Libro]
    juguetes: [Juguete]
    # NEW
    filter_libro(filter: FilterAND): [Libro]
    filter_juguete(filter: FilterAND): [Juguete]
    item_libro(filter: FilterAND): [Libro]
    item_juguete(filter: FilterAND): [Item]
}
